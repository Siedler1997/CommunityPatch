<?xml version="1.0" encoding="utf-8" ?>
<root>
	<Display classname="ED::CDisplayEntityProps">
		<Class>GD::CDisplaySettler</Class>
		<Model>PU_Serf</Model> <!-- must be changed when proper model available -->
                <Anim>PU_Serf_Walk</Anim>
				<Anim>PU_Serf_Run</Anim>
                <DrawPlayerColor>True</DrawPlayerColor>
                <Anim>PU_Serf_Idle1</Anim> 
                <Anim>PU_Serf_Idle2</Anim> 
                <Anim>PU_Serf_Idle3</Anim> 
                <Anim>PU_Serf_Idle4</Anim>
				<Anim>PU_Serf_Attack1</Anim>
                <Anim>PU_Serf_Dying</Anim> 
	</Display>
	<Logic classname="GGL::CGLSettlerProps">
		<Class>GGL::CSettler</Class>
		<AccessCategory>AccessCategorySettler</AccessCategory>		
		<MaxHealth> 200 </MaxHealth>
		<ArmorClass>ArmorClassHero</ArmorClass> 
		<ArmorAmount>6</ArmorAmount>
		<NeedsPlayer>true</NeedsPlayer>
		<ForceNoPlayer>false</ForceNoPlayer>
        <Hat></Hat>
		<AdjustWalkAnimSpeed>true</AdjustWalkAnimSpeed>
		<Exploration>10</Exploration>
		<ExperiencePoints>1000</ExperiencePoints>
	</Logic>
	<Behavior>
		<Logic classname="GGL::CGLAnimationBehaviorExProps">
			<Class>GGL::CGLBehaviorAnimationEx</Class>
		<!-- animation to be used when entity is suspended -->
			<SuspensionAnimation>PU_Serf_Idle1</SuspensionAnimation>
			<AnimSet>SET_SERF</AnimSet>
		</Logic>
		<Display classname="ED::CBehaviorProps">
			<Class>ED::CDisplayBehaviorAnimation</Class>
		</Display>
	</Behavior>
	<Behavior>
		<Logic classname="EGL::CMovementBehaviorProps">
			<Class>GGL::CSettlerMovement</Class>
			<Speed>320</Speed>
			<RotationSpeed>15</RotationSpeed>
		</Logic>
		<Display classname="ED::CBehaviorProps">
			<Class>ED::CDisplayBehaviorMovement</Class>
		</Display>
	</Behavior>
	<Behavior>
		<Logic classname="GGL::CWorkerBehaviorProps">
			<Class>GGL::CWorkerBehavior</Class>
					
				<WorkTaskListsPerCycle>1</WorkTaskListsPerCycle>
				
				<WorkTaskList>TL_CU_SERF_WORK_START</WorkTaskList>
				<WorkIdleTaskList>TL_CU_SERF_IDLE</WorkIdleTaskList> <!-- should ideally have special idling -->
				<WorkWaitUntil>3000</WorkWaitUntil> <!-- time in ms! (use TASK_WORK_WAIT_UNTIL) -->
				<NoWorkMotivationMalus>16</NoWorkMotivationMalus>
				
				<EatTaskList>TL_WORKER_EAT_START</EatTaskList>
				<EatIdleTaskList>TL_CU_SERF_IDLE</EatIdleTaskList>
				<EatWait>3000</EatWait> <!-- this would wait X sec  in task list, use TASK_EAT_WAIT -->
            	<NoFoodMotivationMalus>31</NoFoodMotivationMalus> <!-- should ideally have special idling -->
            	
            	<RestTaskList>TL_WORKER_REST_START</RestTaskList>
            	<RestIdleTaskList>TL_CU_SERF_IDLE</RestIdleTaskList> <!-- should ideally have special idling -->
            	<RestWait>3000</RestWait> <!-- this would wait X sec  in task list, use TASK_REST_WAIT -->
            	<NoRestMotivationMalus>16</NoRestMotivationMalus>
            	
            	<IdleTaskList>TL_WORKER_IDLE</IdleTaskList> <!-- for normal idling -->
            	
            	<LeaveTaskList>TL_WORKER_LEAVE</LeaveTaskList>
            	
            	<InitialMotivation>100</InitialMotivation>
            	<MotivationThresholdSad>70</MotivationThresholdSad>
            	<MotivationThresholdAngry>40</MotivationThresholdAngry>
            	<MotivationThresholdLeave>10</MotivationThresholdLeave>
            	
				<RegularPay>15</RegularPay>
				<NoPayMotivationMalus>31</NoPayMotivationMalus>
			
		</Logic>
	</Behavior>

	<Behavior>
		<Logic classname="EGL::CGLEBehaviorProps">
			<Class>GGL::CBehaviorWalkCommand</Class>
		</Logic>
	</Behavior>
	<Behavior>
		<Logic classname="GGL::CCamperBehaviorProperties">
			<Class>GGL::CCamperBehavior</Class>
			<Range>2000</Range>
		</Logic>
	</Behavior>
	
	<Behavior>
		<Logic classname="GGL::CGLBehaviorPropsDying">
			<Class>GGL::CGLBehaviorDying</Class>
			<DyingTaskList>TL_DIE</DyingTaskList>
		</Logic>
	</Behavior>
</root>
